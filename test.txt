#include <iostream>
#include <string>
using namespace std;
/*class String
{
private:
    bool isEnd=0;//end or not
public:
    //void cArray();//create array

    void gBlock();//get block
    void
};*/
int main()
{
    //cArray();
    bool notFall=0,isEnd=0;
    int row,col;
    cin>>row>>col;
    int **Array=new int*[row+4];
    for(int h=0;h<row;h++) {Array[h]=new int[col+1];}
    for(int i=0;i<row;i++){
        for(int j=0;j<col;j++){
            Array[i][j]=0;
        }
    }
    while((ch=getchar())!='E')
    {    int type,place;
        if('\n'==ch)
            continue;
        else{
            switch(ch){
                case'T':
                case'L':
                case'J':
                case'S':
                case'Z':
                case'I':
                    cin>>type>>place;
                    if(type==1){
                        Array[row][place-1]=1;
                        Array[row+1][place-1]=1;
                        Array[row+2][place-1]=1;
                        Array[row+3][place-1]=1;
                    for(int m=1;Array[row-m][place-1]==0&&m<row+1;m++){
                        Array[row-m][place-1]=1;
                        Array[row-m+3][place-1]=0;
                    }
                    }else if(type==2){
                        Array[row][place-1]=1;
                        Array[row][place]=1;
                        Array[row][place+1]=1;
                        Array[row][place+2]=1;
                    for(int m=1;Array[row-m][place-1]==0&&Array[row-m][place]==0&&Array[row-m][place+1]==0&&Array[row-m][place+2]==0&&m<row+1;m++){
                        Array[row-m][place-1]=1;
                        Array[row-m][place]=1;
                        Array[row-m][place+1]=1;
                        Array[row-m][place+2]=1;
                        Array[row-m+1][place-1]=0;
                        Array[row-m+1][place]=0;
                        Array[row-m+1][place+1]=0;
                        Array[row-m+1][place+2]=0;
                    }
                    }
                    break;
                case'O':
                    cin>>place;
                    Array[row][place-1]=1;
                    Array[row][place]=1;
                    Array[row+1][place-1]=1;
                    Array[row+1][place]=1;
                    for(int m=1;Array[row-m][place-1]==0&&Array[row-m][place]==0&&m<row+1;m++){
                        Array[row-m][place-1]=1;
                        Array[row-m][place]=1;
                        Array[row-m+2][place-1]=0;
                        Array[row-m+2][place]=0;
                    }
                    break;
            default:cout<<"error";

            }
        }
       for(int i=0;i<row;i++){//full blocks or not
            Array[i][col]=0;
          for(int j=0;j<col;j++){
            Array[i][col]+=Array[i][j];
          }
        if(Array[i][col]==col){//delete full blocks &move blocks
         for(int k=i;k<row+3;k++){
          for(int j=0;j<col+1;j++){
            Array[k][j]=Array[k+1][j];
          }
         }
         for(int j=0;j<col+1;j++)Array[row+3][j]=0;
        }
       }
    
    }
    //if(notFall==1){isEnd=1;}
    for(int i=0;i<row;i++){
        for(int j=0;j<col;j++){
            cout<<Array[i][j];
        }cout<<"\n";
    }
    for(int h=0;h<row;h++) {delete []Array[h];}
    delete []Array;
    return 0;
}