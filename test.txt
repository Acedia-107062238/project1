#include <iostream>
#include <string>
#include <fstream>
using namespace std;
ofstream fout;
ifstream fin;
int main()
{

    fin.open("Tetris.data", ios_base::in);
    fout.open("Tetris.final", ios_base::out);
    bool isEnd=0;
    int row,col;
    int ch,m;
    fin>>row>>col;
    int **Array=new int*[row+4];
    for(int h=0;h<row;h++) {Array[h]=new int[col+1];}
    for(int i=0;i<row;i++){
        for(int j=0;j<col;j++){
            Array[i][j]=0;
        }
    }
    while(isEnd==0)
    {    fin>>ch;
        char place;
        fin>>place;
        if('\n'==ch)
            continue;
        else{
            switch(ch){
                case'T1':
                        Array[row][place]=1;
                        Array[row+1][place-1]=1;
                        Array[row+1][place]=1;
                        Array[row+1][place+1]=1;
                    for(int m=1;Array[row-m+1][place-1]==0&&Array[row-m][place]==0&&Array[row-m+1][place+1]==0&&m<row+1;m++){
                        Array[row-m+1][place-1]=1;
                        Array[row-m][place]=1;
                        Array[row-m+1][place+1]=1;
                        Array[row-m+2][place-1]=0;
                        Array[row-m+2][place]=0;
                        Array[row-m+2][place+1]=0;
                    }
                case'T2':
                        Array[row][place]=1;
                        Array[row+1][place-1]=1;
                        Array[row+1][place]=1;
                        Array[row+2][place]=1;
                    for(int m=1;Array[row-m+1][place-1]==0&&Array[row-m][place]==0&&m<row+1;m++){
                        Array[row-m+1][place-1]=1;
                        Array[row-m][place]=1;
                        Array[row-m+2][place-1]=0;
                        Array[row-m+3][place]=0;
                    }
                case'T3':
                        Array[row][place-1]=1;
                        Array[row+1][place]=1;
                        Array[row][place]=1;
                        Array[row][place+1]=1;
                    for(int m=1;Array[row-m][place-1]==0&&Array[row-m][place]==0&&Array[row-m][place+1]==0&&m<row+1;m++){
                        Array[row-m][place-1]=1;
                        Array[row-m][place]=1;
                        Array[row-m][place+1]=1;
                        Array[row-m+1][place-1]=0;
                        Array[row-m+2][place]=0;
                        Array[row-m+1][place+1]=0;
                    }
                case'T4':
                        Array[row][place-1]=1;
                        Array[row+1][place]=1;
                        Array[row+1][place-1]=1;
                        Array[row+2][place-1]=1;
                    for(int m=1;Array[row-m][place-1]==0&&Array[row-m+1][place]==0&&m<row+1;m++){
                        Array[row-m][place-1]=1;
                        Array[row-m+1][place]=1;
                        Array[row-m+3][place-1]=0;
                        Array[row-m+2][place]=0;
                    }
                    break;
                case'L1':

                        Array[row][place-1]=1;
                        Array[row][place]=1;
                        Array[row+1][place-1]=1;
                        Array[row+2][place-1]=1;
                    for(int m=1;Array[row-m][place-1]==0&&Array[row-m][place]==0&&m<row+1;m++){
                        Array[row-m][place-1]=1;
                        Array[row-m][place]=1;
                        Array[row-m+1][place]=0;
                        Array[row-m+3][place-1]=0;
                    }
                 case'L2':
                        Array[row][place-1]=1;
                        Array[row+1][place-1]=1;
                        Array[row+1][place]=1;
                        Array[row+1][place+1]=1;
                    for(int m=1;Array[row-m][place-1]==0&&Array[row-m+1][place]==0&&Array[row-m+1][place+1]==0&&m<row+1;m++){
                        Array[row-m][place-1]=1;
                        Array[row-m+1][place]=1;
                        Array[row-m+1][place+1]=1;
                        Array[row-m+2][place-1]=0;
                        Array[row-m+2][place]=0;
                        Array[row-m+2][place+1]=0;
                    }
                 case'L3':
                        Array[row][place]=1;
                        Array[row+1][place]=1;
                        Array[row+2][place-1]=1;
                        Array[row+2][place]=1;
                    for(int m=1;Array[row-m][place]==0&&Array[row-m+2][place-1]==0&&m<row+1;m++){
                        Array[row-m][place]=1;
                        Array[row-m+2][place-1]=1;
                        Array[row-m+3][place-1]=0;
                        Array[row-m+3][place]=0;
                    }
                    case'L4':
                        Array[row][place-1]=1;
                        Array[row][place]=1;
                        Array[row][place+1]=1;
                        Array[row+1][place+1]=1;
                    for(int m=1;Array[row-m][place-1]==0&&Array[row-m][place]==0&&Array[row-m][place+1]==0&&m<row+1;m++){
                        Array[row-m][place-1]=1;
                        Array[row-m][place]=1;
                        Array[row-m][place+1]=1;
                        Array[row-m+1][place-1]=0;
                        Array[row-m+1][place]=0;
                        Array[row-m+2][place+1]=0;
                    }
                    break;
                case'J1':
                        Array[row][place-1]=1;
                        Array[row][place]=1;
                        Array[row+1][place]=1;
                        Array[row+2][place]=1;
                    for(int m=1;Array[row-m][place-1]==0&&Array[row-m][place]==0&&m<row+1;m++){
                        Array[row-m][place-1]=1;
                        Array[row-m][place]=1;
                        Array[row-m+1][place-1]=0;
                        Array[row-m+3][place]=0;
                    }
                case'J2':
                        Array[row][place-1]=1;
                        Array[row+1][place-1]=1;
                        Array[row][place]=1;
                        Array[row][place+1]=1;
                    for(int m=1;Array[row-m][place-1]==0&&Array[row-m][place]==0&&Array[row-m][place+1]==0&&m<row+1;m++){
                        Array[row-m][place-1]=1;
                        Array[row-m][place]=1;
                        Array[row-m][place+1]=1;
                        Array[row-m+2][place-1]=0;
                        Array[row-m+1][place]=0;
                        Array[row-m+1][place+1]=0;
                    }
                case'J3':
                        Array[row][place-1]=1;
                        Array[row+1][place-1]=1;
                        Array[row+2][place-1]=1;
                        Array[row+2][place]=1;
                    for(int m=1;Array[row-m][place-1]==0&&Array[row-m+2][place]==0&&m<row+1;m++){
                        Array[row-m][place-1]=1;
                        Array[row-m+2][place]=1;
                        Array[row-m+3][place-1]=0;
                        Array[row-m+3][place]=0;
                    }
                    case'J4':
                        Array[row][place+1]=1;
                        Array[row+1][place-1]=1;
                        Array[row+1][place]=1;
                        Array[row+1][place+1]=1;
                    for(int m=1;Array[row-m+1][place-1]==0&&Array[row-m+1][place]==0&&Array[row-m][place+1]==0&&m<row+1;m++){
                        Array[row-m+1][place-1]=1;
                        Array[row-m+1][place]=1;
                        Array[row-m][place+1]=1;
                        Array[row-m+2][place-1]=0;
                        Array[row-m+2][place]=0;
                        Array[row-m+2][place+1]=0;
                    }

                    break;
                case'S1':


                        Array[row][place-1]=1;
                        Array[row][place]=1;
                        Array[row+1][place]=1;
                        Array[row+1][place+1]=1;
                    for(int m=1;Array[row-m][place-1]==0&&Array[row-m][place]==0&&Array[row-m+1][place+1]==0&&m<row+1;m++){
                        Array[row-m][place-1]=1;
                        Array[row-m][place]=1;
                        Array[row-m+1][place+1]=1;
                        Array[row-m+1][place-1]=0;
                        Array[row-m+2][place]=0;
                        Array[row-m+2][place+1]=0;
                    }
                    case'S2':
                        Array[row][place]=1;
                        Array[row+1][place-1]=1;
                        Array[row+1][place]=1;
                        Array[row+2][place-1]=1;
                    for(int m=1;Array[row-m+1][place-1]==0&&Array[row-m][place]==0&&m<row+1;m++){
                        Array[row-m+1][place-1]=1;
                        Array[row-m][place]=1;
                        Array[row-m+3][place-1]=0;
                        Array[row-m+2][place]=0;
                    }

                    break;
                case'Z1':

                        Array[row][place]=1;
                        Array[row][place+1]=1;
                        Array[row+1][place-1]=1;
                        Array[row+1][place]=1;
                    for(int m=1;Array[row-m+1][place-1]==0&&Array[row-m][place]==0&&Array[row-m][place+1]==0&&m<row+1;m++){
                        Array[row-m+1][place-1]=1;
                        Array[row-m][place]=1;
                        Array[row-m][place+1]=1;
                        Array[row-m+2][place-1]=0;
                        Array[row-m+2][place]=0;
                        Array[row-m+1][place+1]=0;
                    }
                case'Z2':
                        Array[row][place-1]=1;
                        Array[row+1][place-1]=1;
                        Array[row+1][place]=1;
                        Array[row+2][place]=1;
                    for(int m=1;Array[row-m][place-1]==0&&Array[row-m+1][place]==0&&m<row+1;m++){
                        Array[row-m][place-1]=1;
                        Array[row-m+1][place]=1;
                        Array[row-m+2][place-1]=0;
                        Array[row-m+3][place]=0;
                    }

                    break;
                case'I1':


                        Array[row][place-1]=1;
                        Array[row+1][place-1]=1;
                        Array[row+2][place-1]=1;
                        Array[row+3][place-1]=1;
                    for(int m=1;Array[row-m][place-1]==0&&m<row+1;m++){
                        Array[row-m][place-1]=1;
                        Array[row-m+3][place-1]=0;
                    }
                 case'I2':
                        Array[row][place-1]=1;
                        Array[row][place]=1;
                        Array[row][place+1]=1;
                        Array[row][place+2]=1;
                    for(int m=1;Array[row-m][place-1]==0&&Array[row-m][place]==0&&Array[row-m][place+1]==0&&Array[row-m][place+2]==0&&m<row+1;m++){
                        Array[row-m][place-1]=1;
                        Array[row-m][place]=1;
                        Array[row-m][place+1]=1;
                        Array[row-m][place+2]=1;
                        Array[row-m+1][place-1]=0;
                        Array[row-m+1][place]=0;
                        Array[row-m+1][place+1]=0;
                        Array[row-m+1][place+2]=0;
                    }
                    break;
                case'O':
                    cin>>place;
                    Array[row][place-1]=1;
                    Array[row][place]=1;
                    Array[row+1][place-1]=1;
                    Array[row+1][place]=1;
                    for(int m=1;Array[row-m][place-1]==0&&Array[row-m][place]==0&&m<row+1;m++){
                        Array[row-m][place-1]=1;
                        Array[row-m][place]=1;
                        Array[row-m+2][place-1]=0;
                        Array[row-m+2][place]=0;
                    }
                    break;
            default:fout<<"error";

            }

       for(int i=row+3;i>-1;i--){//full blocks or not
            Array[i][col]=0;
          for(int j=0;j<col;j++){
            Array[i][col]+=Array[i][j];
          }
        if(Array[i][col]==col){//delete full blocks &move blocks
         for(int k=i;k<row+3;k++){
          for(int j=0;j<col+1;j++){
            Array[k][j]=Array[k+1][j];
          }
         }
         for(int j=0;j<col+1;j++)Array[row+3][j]=0;
        }
       }
       if(Array[row][col]!=0){isEnd=1;}//buffer have blocks or not
     }
     while(getchar()!='\n')continue;
    }
    for(int i=0;i<row;i++){
        for(int j=0;j<col;j++){
            fout<<Array[i][j];
        }fout<<"\n";
    }
    for(int h=0;h<row;h++) {delete []Array[h];}
    delete []Array;
    return 0;
}